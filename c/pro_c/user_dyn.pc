#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <sqlca.h>

int user_dyn(char* sqlstr) {
	char sql_stmt[1024] = { 0 };
	printf("### ENTER user_dyn ###\n");
	/*strcpy((char*)sql_stmt, sqlstr);*/
	sprintf(sql_stmt, "%s", sqlstr);
	printf("### copy sql statement:%s \n", sqlstr);
	/*strcpy(sql_stmt, "SELECT GDG_BASE_NAME, GDG_MAX_GEN, GDG_CUR_GEN FROM gdg_define");*/

	printf("### EXEC SQL BEGIN ###\n");
	EXEC SQL BEGIN DECLARE SECTION;
	char gdg_name[256];
	char gdg_gen_max[256];
	char gdg_gen_cur[256];
	char username1[51]="";
	/*EXEC SQL VAR username1 IS STRING(51);*/
	EXEC SQL END DECLARE SECTION;
	printf("### EXEC SQL END ###\n");

	EXEC SQL INCLUDE SQLCA;
	EXEC SQL PREPARE select_stmt FROM :sql_stmt; 
	EXEC SQL DECLARE c1 CURSOR FOR select_stmt; 
	EXEC SQL OPEN c1; 
	/*EXEC SQL WHENEVER NOT FOUND DO BREAK; */
	int itemcount=0;
	printf("### begin do while ###\n");
	//while(itemcount <=10) 
	while(itemcount <=3) 
	{ 
		EXEC SQL FETCH c1 INTO :gdg_name, :gdg_gen_max, :gdg_gen_cur; 
		printf("[%d] sqlca.sqlcode=%d", itemcount, sqlca.sqlcode);
		/*if( sqlca.sqlcode == 1403) break;*/
		printf("The name is: %s,    The max gen is: %s,    The current gen is :%s\n", gdg_name, gdg_gen_max, gdg_gen_cur);
		itemcount++;
	} 
	EXEC SQL CLOSE c1; 	
	printf("### EXIT user_dyn ###\n");
}

int libuser_dyn_main1()
{
	printf("in libuser_dyn, in main1\n");
}

int main()
{
	printf("in libuser_dyn,in main\n");
}

int libuser_dyn_main2()
{
	/*user_main("SELECT GDG_BASE_NAME, GDG_MAX_GEN, GDG_CUR_GEN FROM gdg_define");*/
	user_dyn("SELECT GDG_BASE_NAME, GDG_MAX_GEN, GDG_CUR_GEN FROM gdg_define");
	printf("hello,world,in main2\n");
}

int libuser_dyn()
{
	printf("hello,world,in libuser_dyn\n");
}

int user_conn(char* uidinput) {
        EXEC SQL BEGIN DECLARE SECTION;
                char *uid = "scott/tiger001@zzy001999";
                long userid=0;
                char username[51]="";
                EXEC SQL VAR username IS STRING(51);
        EXEC SQL END DECLARE SECTION;

		if (NULL != uidinput) uid = uidinput;

        EXEC SQL CONNECT :uid;
        if(sqlca.sqlcode == 0){
                printf("connect sucess!\n");
        } else {
                printf("connect fail!\n");
				return -1;
		}
				
		EXEC SQL DECLARE cur_user CURSOR FOR SELECT DEPTNO, DNAME FROM DEPT;
		EXEC SQL OPEN cur_user;
		EXEC SQL WHENEVER NOT FOUND DO BREAK; 

         while(1){
			userid=0;
			strcpy(username,"");
			EXEC SQL FETCH cur_user INTO  :userid, :username;
			if( sqlca.sqlcode == 1403) break;
			printf("userid=%ld,username=%s\n",userid,username);
         }

         EXEC SQL CLOSE cur_user;

 		 /************************/
		 printf("BEGIN to run\n");
		 //used to test connection
		 //user_dyn("SELECT GDG_BASE_NAME, GDG_MAX_GEN, GDG_CUR_GEN FROM gdg_define");
		 printf("END to run\n");

         /* EXEC SQL COMMIT WORK RELEASE;*/
         //EXEC SQL ROLLBACK WORK RELEASE;
}

int user_all(char* sqlstr) {
	user_conn("scott/tiger001@zzy001");
	user_dyn("SELECT GDG_BASE_NAME, GDG_MAX_GEN, GDG_CUR_GEN FROM gdg_define");
	sleep(1);
	return 5;
}
